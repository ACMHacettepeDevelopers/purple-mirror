{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beg\\xFCm Sude USLU\\\\OneDrive - hacettepe.edu.tr\\\\Masa\\xFCst\\xFC\\\\hackathon\\\\app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [cloudCoverThreshold, setCloudCoverThreshold] = useState(15);\n  const [tileUrl, setTileUrl] = useState('');\n  const [pixelValues, setPixelValues] = useState(null);\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/get_image', {\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n        cloud_cover_threshold: cloudCoverThreshold\n      });\n      setTileUrl(response.data.tile_url);\n      setPixelValues(response.data.pixel_values); // Set the pixel values\n    } catch (error) {\n      console.error('Error fetching image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Landsat Image Fetcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter latitude\",\n      value: latitude,\n      onChange: e => setLatitude(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter longitude\",\n      value: longitude,\n      onChange: e => setLongitude(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Cloud Coverage Threshold\",\n      value: cloudCoverThreshold,\n      onChange: e => setCloudCoverThreshold(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Get Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), tileUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Landsat Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: tileUrl,\n        alt: \"Landsat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), pixelValues && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pixel Values:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(pixelValues, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KGNUKfyBUaOpWMXvonyCLROlZZ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","longitude","setLongitude","cloudCoverThreshold","setCloudCoverThreshold","tileUrl","setTileUrl","pixelValues","setPixelValues","handleSubmit","response","post","parseFloat","cloud_cover_threshold","data","tile_url","pixel_values","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","alt","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Begüm Sude USLU/OneDrive - hacettepe.edu.tr/Masaüstü/hackathon/app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [cloudCoverThreshold, setCloudCoverThreshold] = useState(15);\n  const [tileUrl, setTileUrl] = useState('');\n  const [pixelValues, setPixelValues] = useState(null);\n\n  const handleSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/get_image', {\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n        cloud_cover_threshold: cloudCoverThreshold\n      });\n      \n      setTileUrl(response.data.tile_url);\n      setPixelValues(response.data.pixel_values); // Set the pixel values\n    } catch (error) {\n      console.error('Error fetching image:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Landsat Image Fetcher</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter latitude\"\n        value={latitude}\n        onChange={(e) => setLatitude(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Enter longitude\"\n        value={longitude}\n        onChange={(e) => setLongitude(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Cloud Coverage Threshold\"\n        value={cloudCoverThreshold}\n        onChange={(e) => setCloudCoverThreshold(e.target.value)}\n      />\n      <button onClick={handleSubmit}>Get Image</button>\n      {tileUrl && (\n        <div>\n          <h2>Landsat Image</h2>\n          <img src={tileUrl} alt=\"Landsat\" />\n          {pixelValues && (\n            <div>\n              <h3>Pixel Values:</h3>\n              <pre>{JSON.stringify(pixelValues, null, 2)}</pre>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}